<!-- sbox.Community © 2023-2024 -->

@using System;
@using Sandbox;
@using Sandbox.UI;
@using Sandbox.Diagnostics;
@using System.Collections.Generic;
@using System.Linq;
@using System.Threading.Tasks;

@namespace MapParser
@inherits Panel

<style>
	DownloadNotification {
		height: 4%;
		min-height: 4%;
		width: 100%;
		flex-shrink: 0;
		transition: all 0.3s ease-in-out, opacity 0.2s linear;
		font-color:white;
		font-family:Calibri;
		top: -100%;
		opacity:0;
		position: absolute;
		justify-content:center;

		&.Active{
			top: 0%;
			opacity:1;
			sound-in: ui.popup.message.open;
		}

		&.Finished {
		transition: all 1.0s ease-out;
			top: 20%;
			opacity: 0;
			sound-in: ui.popup.message.open;

			.content
			{
				margin: 0px 0px 0px 10px;
				border-radius: 2px;
				align-content: center;
				align-items: center;
				height: 100%;
				padding: 10px;
				flex-shrink: 0;
				background-color: green;
				text-shadow: 0 0 2px #000000,0 0 1px rgba(1,1,1,1);
			}
		}

		&.Failed {
		transition: all 1.0s ease-out;
			top: 20%;
			opacity: 0;
			sound-in: ui.popup.message.open;

			.content
			{
				margin: 0px 0px 0px 10px;
				border-radius: 2px;
				align-content: center;
				align-items: center;
				height: 100%;
				padding: 10px;
				flex-shrink: 0;
				background-color: red;
				text-shadow: 0 0 2px #000000,0 0 1px rgba(1,1,1,1);
			}
		}
		.content{
			margin: 0px 0px 0px 10px;
			border-radius: 2px;
			align-content:center;
			align-items:center;
			height: 100%;
			padding: 10px;
			flex-shrink:0;
			background-color: rgba(0.1,0.1,0.1,0.8);
			text-shadow: 0 0 2px #000000,0 0 1px rgba(1,1,1,1);
		}
}
</style>

<div class="content">
	<span style="margin-left:5px;"><i style="top:2px;right:3px;">download</i>@note</span>
</div>

@code
{
	public static List<DownloadNotification> references = new();

	public string note = "";
	float timeLeft = 0;
	public override void Tick()
	{
		if (timeLeft < Time.Now)
			Remove();

		base.Tick();
	}
	protected override int BuildHash()
	{
		return HashCode.Combine(note);
	}

	public static DownloadNotification? CreateInfo(string info, float timeleft = 300f)
	{
		if(Game.IsServer)
		{
			// Send to info the spawner of the map
			return null;
		}

		Log.Info( info );

		RemoveAll();
		DownloadNotification panel = Game.RootPanel.FindRootPanel().AddChild<DownloadNotification>();
		panel.note = info.Replace("\r","").Replace("\n","");
		panel.timeLeft = Time.Now + timeleft;
		panel.Start();

		references.Add( panel );
		return panel;
	}
	public void FinishDownload(string note = "Download successful")
	{
		AddClass("Finished");

		this.note = note;
		references.Remove(this);

		Log.Info( note );

		_ = MapParser.Util.Timer(1500, () =>
		{
			if (this != null && this.IsValid())
				this.Delete();
		});
	}

	public void FailedDownload(string note = "Download failed")
	{
		AddClass("Failed");
		this.note = note;
		references.Remove(this);

		Log.Info( note );

		_ = MapParser.Util.Timer(1500, () =>
		{
			if (this != null && this.IsValid())
				this.Delete();
		});
	}

	public void Start()
	{
		_ = MapParser.Util.Timer(1, () =>
		{
			if (this != null && this.IsValid())
			{
				AddClass("Active");
			}
		});
	}
	public void Remove()
	{
		RemoveClass("Active");
		references.Remove(this);

		_ = MapParser.Util.Timer(250, () =>
		{
			if (this != null && this.IsValid())
				this.Delete();
		});
	}
	public static void RemoveAll()
	{
		foreach (var panel in references)
			panel.Delete();

		references.Clear();
	}
}
