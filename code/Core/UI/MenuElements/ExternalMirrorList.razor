@using System;
@using Sandbox;
@using Sandbox.UI;
@using Sandbox.Diagnostics;
@using System.Collections.Generic;
@using System.Linq;
@using System.Threading.Tasks;


@namespace MapParser
@inherits Panel

<style>
	
	ExternalMirrorList {
	width:95%;
	height: 30%;
	border-radius: 2px;
    flex-direction: column;
    flex-wrap: nowrap;
	margin:10px;
	box-shadow: 0px 0px 10px 2px rgba(25, 25, 25, 0.9);

	.rowHeader{
		background: linear-gradient(to top, #ffe259, #ffa751);
		width:100%;
		height: 15%;
		flex-direction:row;

		.rowHeader_item{
			width:100%;
			height:100%;
			justify-content:center;
			border-bottom-width:1px;
			border-left-width:1px;
			border-color:black;
			&:nth-child(1) {
				border-left-width: 0px;
			}
		}
	}
	.row{
		overflow:scroll;
		background-color:#afafaf;
		width:100%;
		height: 100%;
		flex-direction:column;
		
		.rowItem{
			width:100%;
			height:18%;
			min-height: 15%;
			justify-content:center;
			border-bottom-width:1px;
			border-color:black;
			&.True
			{
				background: linear-gradient(to bottom, #ff6a6a, #ff1f1f);
				&:hover{
					background: none;
					background-color: #fd4646;
				}
			}
			&.False
			{
				background: linear-gradient(to bottom, #898989, #a4a4a4);
				&:hover{
					background: none;
					background-color: gray;
				}
			}
		}

	}
}
</style>

<div class="rowHeader">
	<div class="rowHeader_item">Mirror List</div>
</div>
<div class="row">
	@if (Manager.MapMirrors.Count() != 0)
	{
		@foreach (var mirror in Manager.MapMirrors)
		{
			<div class="rowItem @(selectedMirror == mirror.Item1)" @onclick=@(() => selectRow(mirror.Item1))>@(mirror.Item1)</div>
		}
	}
	@if (Manager.MapMirrors.Count() == 0)
	{
		<div class="rowItem">Not Found</div>
	}
</div>

@code
{
	public string selectedMirror { get; set; }
	public ExternalMapList mapList { get; set; }

	public override void Tick()
	{
		base.Tick();
	}
	protected override int BuildHash()
	{
		return HashCode.Combine(Manager.MapMirrors, selectedMirror, mapList);
	}
	void selectRow(string mirror)
	{
		selectedMirror = mirror;

		mapList.maps.Clear();

		var mirrorData = Manager.MapMirrors.Where(x => x.Item1 == mirror).FirstOrDefault();

		foreach (string line in mirrorData.Item3)
			if (!line.Contains("sex") || line.Contains("porn"))
				mapList.maps.Add(line);
	}
}
