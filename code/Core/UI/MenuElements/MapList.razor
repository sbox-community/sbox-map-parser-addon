<!-- sbox.Community © 2023-2024 -->

@using System;
@using Sandbox;
@using Sandbox.UI;
@using Sandbox.Diagnostics;
@using System.Collections.Generic;
@using System.Linq;
@using System.Threading.Tasks;


@namespace MapParser
@inherits Panel

<style>
	
	MapList {
		width:75%;
		height: 30%;
		min-width:75%;
		min-height: 30%;
		max-width:75%;
		flex-direction: row;
		flex-wrap: nowrap;
		border-radius: 2px;
		flex-shrink:0;
		box-shadow: 0px 0px 10px 2px rgba(25, 25, 25, 0.9);

		.rowHeader{
			background: linear-gradient(to top, #ffe259, #ffa751);
			width:100%;
			height: 15%;
			flex-direction:row;

			.rowHeader_item{
				width:100%;
				height:100%;
				justify-content:center;
				border-bottom-width:1px;
				border-left-width:1px;
				border-color:black;
				&:nth-child(1) {
					border-left-width: 0px;
				}
			}
		}
		.row{
			overflow:scroll;
			background-color: #afafaf;
			width:100%;
			height: 100%;
			flex-direction:column;

			.rowItem{
				width:100%;
				height:15%;
				max-height:15%;
				min-height: 15%;
				justify-content:center;
				border-bottom-width:1px;
				border-color:black;

				&.True
				{
					background: linear-gradient(to bottom, #ff6a6a, #ff1f1f);
					&:hover{
						background: none;
						background-color: #fd4646;
					}
				}
				&.False
				{
					background: linear-gradient(to bottom, #898989, #a4a4a4);
					&:hover{
						background: none;
						background-color: gray;
					}
				}
			}
		}
}
</style>

<div style="flex-direction:column">
	<div class="rowHeader">
		<div class="rowHeader_item">Found Maps</div>
	</div>
	<div @ref="list" class="row">
		@if (maps.Count() != 0)
		{
			@foreach (var infoPackage in maps)
			{
				<div class="rowItem @(selectedPackage.Equals(infoPackage))" tooltip=@($"{infoPackage.name}\n\r{infoPackage.desp}\n\rEngine:{infoPackage.engine}\nGame:{infoPackage.game}\nPath:{infoPackage.bsp}\nOffset:{infoPackage.offset}\nAngles:{infoPackage.angles}") @onclick=@(() => selectRow(infoPackage))>@(Util.PathToMapName(infoPackage.bsp))</div>
			}
		}
		@if (maps.Count() == 0)
		{
			<div class="rowItem">Not Found</div>
		}
	</div>
</div>
<ScrollBar @ref="scrollBar"></ScrollBar>

@code
{
	public Manager.ContentPackage.PackageInfo? selectedPackage { get; set; }

	public List<Manager.ContentPackage.PackageInfo> maps { get; set; }  = new List<Manager.ContentPackage.PackageInfo>();

	Panel list { get; set; }

	ScrollBar scrollBar { get; set; }

	public override void Tick()
	{
		base.Tick();
	}
	protected override int BuildHash()
	{
		return HashCode.Combine(maps, selectedPackage);
	}
	void selectRow(Manager.ContentPackage.PackageInfo panel)
	{
		selectedPackage = panel;
	}
	protected override void OnAfterTreeRender(bool firstTime) {
		if (firstTime)
			scrollBar.list = this.list;
	}
}
