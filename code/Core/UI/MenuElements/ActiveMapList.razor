<!-- sbox.Community © 2023-2024 -->

@using System;
@using Sandbox;
@using Sandbox.UI;
@using Sandbox.Diagnostics;
@using System.Collections.Generic;
@using System.Linq;
@using System.Threading.Tasks;


@namespace MapParser
@inherits Panel

<style>
	
	ActiveMapList {
		width:99%;
		height: 30%;
		min-height: 30%;
		border-radius: 2px;
		flex-direction: column;
		flex-wrap: nowrap;
		flex-shrink:0;
		box-shadow: 0px 0px 10px 2px rgba(25, 25, 25, 0.9);
		.rowHeader{
			background: linear-gradient(to top, #ffe259, #ffa751);
			width:100%;
			height: 15%;
			flex-direction:row;

			.rowHeader_item{
				width:100%;
				height:100%;
				justify-content:center;
				border-bottom-width:1px;
				border-left-width:1px;
				border-color:black;
				&:nth-child(1) {
					border-left-width: 0px;
				}
			}
		}
		.row{
			overflow:scroll;
			background-color: #afafaf;
			width:100%;
			height: 100%;
			flex-direction:column;

			.rowItem{
				width:100%;
				height:18%;
				min-height: 15%;
				justify-content:center;
				border-bottom-width:1px;
				border-color:black;
				&.True
				{
					background: linear-gradient(to bottom, #ff6a6a, #ff1f1f);
					&:hover{
						background: none;
						background-color: #fd4646;
					}
				}
				&.False
				{
					background: linear-gradient(to bottom, #898989, #a4a4a4);
					&:hover{
						background: none;
						background-color: gray;
					}
				}
			}
		}
}
</style>

<div class="rowHeader">
	<div class="rowHeader_item">Active Spawned Maps</div>
</div>
<div class="row">
	@if (MapParser.Manager.Maps.Count() != 0)
	{
		@foreach (var map in MapParser.Manager.Maps.Values)
		{
			<div class="rowItem @(selectedMap.Equals(map))" @onclick=@(() => selectRow(map))> @(map.spawnParameter.mapName)</div>
		}
	}
	@if (MapParser.Manager.Maps.Count() == 0)
	{
		<div class="rowItem">Not Found</div>
	}
</div>

@code
{
	public MapParser.Manager.MapObjects? selectedMap;
	public override void Tick()
	{
		base.Tick();
	}
	protected override int BuildHash()
	{
		return HashCode.Combine(MapParser.Manager.Maps, selectedMap);
	}
	void selectRow(MapParser.Manager.MapObjects mapobject)
	{
		selectedMap = mapobject;
	}
}
